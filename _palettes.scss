// Required SASS modules:
@use "sass:map"; // access values in arrays
@use "sass:color"; // color manipulation
@use 'variables' as *;

// Dependencies:
@use "constants" as *;
@use "functions" as *;

// Generate the the light and dark tint colors for each base color
//
@function colorMap($baseColors, $variations, $colorStep: 100) {
  $colors: ();
  @each $color, $value in $baseColors {
    $maxVar: 36;
    $mid: $variations / 2;
    $dist: $mid - 1;
    $step: $maxVar / $dist;
    // lighten and darken
    @for $i from 1 through $dist {
      $percent: $maxVar - ($step * ($i - 1));
      $darken: ($variations - $i) * $colorStep;
      $lighten: $i * $colorStep;
      $colors: map-merge(
        $colors,
        (
          #{$color}-#{$lighten}: lighten($value, $percent),
          #{$color}-#{$darken}: darken($value, $percent)
        )
      );
    }
    // middle eg 500
    $colors: map-merge($colors, (#{$color}-050: lighten($value, 38.7)));
    $colors: map-merge(
      $colors,
      (#{$color}-#{$variations/2 * $colorStep}: $value)
    );
  }
  @return $colors;
}

// Let's generate some palettes and styles.

// Create a folder to hold all Palettes.

.Palettes {
  @each $baseColor, $baseColorValue in $baseColors {
    $bColor: (
      $baseColor: $baseColorValue
    );

    // Create a sub-folder with the base color names

    .#{"" + $baseColor} {
      $paletteNumber: 10; // How many palettes you want for each base color?
      $paletteIncrements: 100; // Incremental for pallete names e.g.: blue-100, blue-200
      @each $color,
        $value in colorMap(($bColor), $paletteNumber, $paletteIncrements)
      {
        .#{$color} {
          background-color: $value;
        }
      }
    }
  }
}
